"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("svelte/store");const e=(t,e)=>{if(!Array.isArray(t))return null;for(const r of t)if("function"==typeof r)try{const t=r(e);if(null!=t)return t}catch(t){console.error("validator error",r,t)}return null};class r{constructor(r,s=[]){this.initial=r,this.validators=s,this.value=t.writable(this.initial),this.touched=t.writable(!1),this.state=t.derived([this.value,this.touched],([t,r])=>{const s=e(this.validators,t);return{$error:s,$valid:null==s,$touched:r,$dirty:this.initial!==t}})}setTouched(t){this.touched.set(t)}getControl(){return null}reset(t){this.touched.set(!1),null!=t&&(this.initial=t),this.value.set(this.initial)}setValidators(t){Array.isArray(t)&&t.length&&(this.validators=t)}}const s=/^([^.[]+)\.?(.*)$/;const o=/^\[(\d+)\]\.?(.*)$/;const l=({onlyTouched:t=!1}={})=>(e,s)=>{if(!(s instanceof r))throw new Error("must be used with a Control class");return{destroy:s.state.subscribe(r=>{const s=r,o=!(t&&!s.$touched||!s.$error);e.hidden=!o,o&&(e.innerHTML=s.$error)})}},i=l(),n=/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/,a=/^[\d.]+$/,u=/^[\d]+$/;exports.Control=r,exports.ControlArray=class{constructor(r,s=[]){this.controls=r,this.validators=s,this.controlStore=t.writable(this.controls),this.valueDerived=t.derived(this.controlStore,(e,r)=>t.derived(e.map(t=>t.value),t=>t).subscribe(r)),this.value={subscribe:this.valueDerived.subscribe,set:t=>this.setValue(t),update:e=>this.setValue(e(t.get(this.valueDerived)))},this.state=t.derived([this.value,this.controlStore],([r,s])=>{const o=[];let l=!0;for(let e=0,r=s.length;e<r;e++){const r=t.get(s[e].state);o[e]=r,l=l&&r.$valid,o.$touched=o.$touched||r.$touched,o.$dirty=o.$dirty||r.$dirty}return o.$error=e(this.validators,r),o.$valid=null==o.$error&&l,o})}setValue(e){t.get(this.controlStore).forEach((t,r)=>t.value.set(e[r]))}get size(){return t.get(this.controlStore).length}pushControl(t){this.controlStore.update(e=>(e.push(t),e))}addControlAt(t,e){this.controlStore.update(r=>(r.splice(t,0,e),r))}removeControlAt(t){this.controlStore.update(e=>(e.splice(t,1),e))}slice(t=0,e){this.controlStore.update(r=>r.slice(t,e))}getControl(t){const[e,r,s]=t.match(o)||[],l=null!=r&&this.controls[+r]||null;return l?s?l.getControl(s):l:null}reset(e){t.get(this.controlStore).forEach((t,r)=>t.reset(e&&e[r]))}setValidators(t){Array.isArray(t)&&t.length&&(this.validators=t)}},exports.ControlGroup=class{constructor(r,s=[]){this.controls=r,this.validators=s,this.valueDerived=t.derived(this.initControls(this.controls),t=>t),this.value={subscribe:this.valueDerived.subscribe,set:t=>this.setValue(t),update:e=>this.setValue(e(t.get(this.valueDerived)))},this.state=t.derived(this.value,r=>{const s={};let o=!0,l=!1,i=!1;for(const e of Object.keys(this.controls)){const r=s[e]=t.get(this.controls[e].state);o=o&&r.$valid,l=l||r.$touched,i=i||r.$dirty}const n=e(this.validators,r),a=null==n&&o;return Object.assign({$error:n,$valid:a,$touched:l,$dirty:i},s)})}initControls(e){const r=Object.keys(e),s=r.map(t=>this.controls[t]).map(t=>t.value);return t.derived(s,t=>t.reduce((t,e,s)=>(t[r[s]]=e,t),{}))}setValue(t){Object.keys(this.controls).forEach(e=>{this.controls[e].value.set(t[e])})}getControl(t){const[e,r,o]=t.match(s)||[],l=r&&this.controls[r]||null;return l?o?l.getControl(o):l:null}reset(t){Object.keys(this.controls).forEach(e=>{this.controls[e].reset(t[e])})}setValidators(t){Array.isArray(t)&&t.length&&(this.validators=t)}},exports.controlClasses=(t,e)=>{if(!(e instanceof r))throw new Error("must be used with a Control class");const s=t.classList,o=e.state.subscribe(t=>{t.$error?(s.add("invalid"),s.remove("valid")):(s.add("valid"),s.remove("invalid")),t.$dirty?(s.add("dirty"),s.remove("pristine")):(s.add("pristine"),s.remove("dirty")),t.$touched?s.add("touched"):s.remove("touched")}),l=["blur","focusout"],i=()=>l.forEach(e=>t.removeEventListener(e,n)),n=()=>{e.setTouched(!0),i()};return l.forEach(e=>t.addEventListener(e,n)),{destroy(){i(),o()}}},exports.controlError=i,exports.controlErrorFactory=l,exports.decimal=t=>e=>null==e||!isNaN(e)&&a.test(`${e}`)?null:t,exports.email=t=>e=>null==e||n.test(e)?null:t,exports.integer=t=>e=>null==e||!isNaN(e)&&u.test(`${e}`)?null:t,exports.max=(t,e)=>r=>null==r||!isNaN(r)&&(null==e||r<=e)?null:t,exports.maxLength=(t,e)=>r=>null!=r&&(null==e||`${r}`.length<=e)?null:t,exports.min=(t,e)=>r=>null==r||!isNaN(r)&&(null==e||r>=e)?null:t,exports.minLength=(t,e)=>r=>null!=r&&(null==e||`${r}`.length>=e)?null:t,exports.number=t=>e=>null==e||!isNaN(e)?null:t,exports.pattern=(t,e)=>r=>null==r||null==e||e.test(r)?null:t,exports.required=(t,e=!0)=>r=>{let s=null!=r?`${r}`:"";return e&&(s=s.trim()),""!==s?null:t};
//# sourceMappingURL=index.js.map
