import{writable as t,derived as e,get as s}from"svelte/store";const r=(t,e)=>{if(!Array.isArray(t))return null;for(const s of t)if("function"==typeof s)try{const t=s(e);if(null!=t)return t}catch(t){console.error("validator error",s,t)}return null};class o{constructor(t){this.validators=t}setValidators(t){Array.isArray(t)&&t.length&&(this.validators=t)}}class i extends o{constructor(s,o=[]){super(o),this.initial=s,this.value=t(this.initial),this.touched=t(!1),this.state=e([this.value,this.touched],([t,e])=>{const s=r(this.validators,t);return{$error:s,$valid:null==s,$touched:e,$dirty:this.initial!==t}})}setTouched(t){this.touched.set(t)}child(){return null}reset(t){void 0!==t&&(this.initial=t),this.value.set(this.initial),this.touched.set(!1)}}const l=/^([^.[]+)\.?(.*)$/;class c extends o{constructor(o,i=[]){super(i),this.controlStore=t({}),this.controls={subscribe:this.controlStore.subscribe},this.valueDerived=e(this.controlStore,(t,s)=>{const r=Object.keys(t),o=r.map(e=>t[e].value);return e(o,t=>t.reduce((t,e,s)=>(t[r[s]]=e,t),{})).subscribe(s)}),this.childStateDerived=e(this.controlStore,(t,s)=>{const r=Object.keys(t),o=r.map(e=>t[e].state);return e(o,t=>t.reduce((t,e,s)=>(t[r[s]]=e,t),{})).subscribe(s)}),this.value={subscribe:this.valueDerived.subscribe,set:t=>this.setValue(t),update:t=>this.setValue(t(s(this.valueDerived)))},this.state=e([this.valueDerived,this.childStateDerived],([t,e])=>{const s={};let o=!0,i=!1,l=!1;for(const t of Object.keys(e)){const r=s[t]=e[t];o=o&&r.$valid,i=i||r.$touched,l=l||r.$dirty}const c=r(this.validators,t),n=null==c&&o;return Object.assign({$error:c,$valid:n,$touched:i,$dirty:l},s)}),this.controlStore.set(o)}iterateControls(t){const e=s(this.controlStore);Object.entries(e).forEach(t)}setValue(t){this.iterateControls(([e,s])=>{s.value.set(t[e])})}addControl(t,e){this.controlStore.update(s=>(s[t]=e,s))}removeControl(t){this.controlStore.update(e=>(delete e[t],e))}setTouched(t){this.iterateControls(([e,s])=>{s.setTouched(t)})}child(t){const[e,r,o]=t.match(l)||[],i=s(this.controlStore),c=r&&i[r]||null;return c?o?c.child(o):c:null}reset(t){this.iterateControls(([e,s])=>{s.reset(t&&t[e])})}}const n=/^\[(\d+)\]\.?(.*)$/;class a extends o{constructor(o,i=[]){super(i),this._controls=o,this.controlStore=t(this._controls),this.controls={subscribe:this.controlStore.subscribe},this.valueDerived=e(this.controlStore,(t,s)=>e(t.map(t=>t.value),t=>t).subscribe(s)),this.childStateDerived=e(this.controlStore,(t,s)=>e(t.map(t=>t.state),t=>t).subscribe(s)),this.value={subscribe:this.valueDerived.subscribe,set:t=>this.setValue(t),update:t=>this.setValue(t(s(this.valueDerived)))},this.state=e([this.valueDerived,this.childStateDerived],([t,e])=>{const s={list:[]};let o=!0;for(let t=0,r=e.length;t<r;t++){const r=e[t];s.list[t]=r,o=o&&r.$valid,s.$touched=s.$touched||r.$touched,s.$dirty=s.$dirty||r.$dirty}return s.$error=r(this.validators,t),s.$valid=null==s.$error&&o,s})}iterateControls(t){s(this.controlStore).forEach(t)}setValue(t){this.iterateControls((e,s)=>e.value.set(t[s]))}setTouched(t){this.iterateControls(e=>e.setTouched(t))}pushControl(t){this.controlStore.update(e=>(e.push(t),e))}addControlAt(t,e){this.controlStore.update(s=>(s.splice(t,0,e),s))}removeControlAt(t){this.controlStore.update(e=>(e.splice(t,1),e))}removeControl(t){this.controlStore.update(e=>e.filter(e=>e!==t))}slice(t,e){this.controlStore.update(s=>s.slice(t,e))}child(t){const[e,r,o]=t.match(n)||[],i=s(this.controlStore),l=null!=r&&i[+r]||null;return l?o?l.child(o):l:null}reset(t){this.iterateControls((e,s)=>e.reset(t&&t[s]))}}const h=(t,e)=>{if(!(e instanceof i))throw new Error("must be used with a Control class");const r=t.classList,o=e.state.subscribe(t=>{t.$error?(r.add("invalid"),r.remove("valid")):(r.add("valid"),r.remove("invalid")),t.$dirty?(r.add("dirty"),r.remove("pristine")):(r.add("pristine"),r.remove("dirty")),t.$touched?r.add("touched"):r.remove("touched")}),l=["blur","focusout"],c=()=>{s(e.state).$touched||e.setTouched(!0)};return l.forEach(e=>t.addEventListener(e,c)),{destroy(){l.forEach(e=>t.removeEventListener(e,c)),o()}}};export{i as Control,a as ControlArray,o as ControlBase,c as ControlGroup,h as controlClasses};
//# sourceMappingURL=index.js.map
